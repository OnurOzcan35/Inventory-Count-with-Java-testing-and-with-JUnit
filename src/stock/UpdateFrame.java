/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usser
 */
public class UpdateFrame extends javax.swing.JFrame {

    int rowCount = 0;
    String Name = "";
    String Brand = "";
    String SellPrice = "";
    String WarnLimit = "";
    String BuyPrice = "";
    String Stock = "";

    /**
     * Creates new form UpdateFrame
     */
    public UpdateFrame() {
        initComponents();
        txtVisibleFalseWithoutId(true);
        chk_ID.setVisible(false);
        chkVisibleFalseWithoutId(true);
        btn_update.setEnabled(false);
        btn_Delete.setEnabled(false);
        jButton1.setEnabled(false);
        ProductTable.setEnabled(false);
        ProductTable.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ));
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("ID");
        defaultTableModel.addColumn("İsim");
        defaultTableModel.addColumn("Marka");
        defaultTableModel.addColumn("Alış Fiyatı");
        defaultTableModel.addColumn("Satış Fiyatı");
        defaultTableModel.addColumn("Stok");
        defaultTableModel.addColumn("Güncelleme Tarihi");
        ProductTable.setModel(defaultTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chk_Name = new javax.swing.JCheckBox();
        chk_ID = new javax.swing.JCheckBox();
        chk_Stock = new javax.swing.JCheckBox();
        chk_warnLimit = new javax.swing.JCheckBox();
        chk_BuyPrice = new javax.swing.JCheckBox();
        chk_SellPrice = new javax.swing.JCheckBox();
        txt_ID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_Name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_Stock = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_warnLimit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_BuyPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_SellPrice = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();
        btn_IDarama = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        btn_Delete = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_Brand = new javax.swing.JTextField();
        chk_Brand1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ürün Düzenleme");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chk_Name.setText("Ürün ismi");
        chk_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_NameActionPerformed(evt);
            }
        });
        getContentPane().add(chk_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        chk_ID.setText("ID");
        chk_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_IDActionPerformed(evt);
            }
        });
        getContentPane().add(chk_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, -1, -1));

        chk_Stock.setText("Adet");
        chk_Stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_StockActionPerformed(evt);
            }
        });
        getContentPane().add(chk_Stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, -1, -1));

        chk_warnLimit.setText("Limit uyarısı");
        chk_warnLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_warnLimitActionPerformed(evt);
            }
        });
        getContentPane().add(chk_warnLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 90, -1, -1));

        chk_BuyPrice.setText("Alış Fiyatı");
        chk_BuyPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_BuyPriceActionPerformed(evt);
            }
        });
        getContentPane().add(chk_BuyPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, -1, -1));

        chk_SellPrice.setText("Satış fiyatı");
        chk_SellPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_SellPriceActionPerformed(evt);
            }
        });
        getContentPane().add(chk_SellPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));

        txt_ID.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_IDİnputMethodTextChanged(evt);
            }
        });
        txt_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IDActionPerformed(evt);
            }
        });
        getContentPane().add(txt_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 100, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        getContentPane().add(txt_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 100, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/product_name.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 50, 40));

        jLabel3.setText("Satış fiyatını giriniz:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        jLabel4.setText("Adetini giriniz:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock.png"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 50, 50));
        getContentPane().add(txt_Stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 100, -1));

        jLabel6.setText("Ürün ismini giriniz:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/warn3.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, 50));

        txt_warnLimit.setToolTipText("");
        getContentPane().add(txt_warnLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 110, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/price.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 50, 50));
        getContentPane().add(txt_BuyPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 110, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sellprice.png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 50, 50));
        getContentPane().add(txt_SellPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 110, -1));

        jLabel10.setText("Bulmak istediğiniz ürünün ID'sini giriniz:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jLabel11.setText("Limit uyarısını giriniz:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 70, -1, -1));

        jLabel12.setText("Alış fiyatını giriniz:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 255));
        jLabel13.setText("Düzenlemek veya Silmek İstediğiniz Ürününü Giriniz");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 400, 30));

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept.png"))); // NOI18N
        btn_update.setText("Değiştir");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 160, 40));

        btn_IDarama.setText("ID Ara");
        btn_IDarama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IDaramaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_IDarama, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        jLabel14.setForeground(new java.awt.Color(255, 0, 51));
        jLabel14.setText("Değişen Ürünler");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, -1, -1));

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(ProductTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 850, 210));

        btn_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btn_Delete.setText("Sil");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 170, 40));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/brand.png"))); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, 50));

        jLabel16.setText("Markasını giriniz:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, -1));

        txt_Brand.setToolTipText("");
        getContentPane().add(txt_Brand, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 110, -1));

        chk_Brand1.setText("Marka:");
        chk_Brand1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_Brand1ActionPerformed(evt);
            }
        });
        getContentPane().add(chk_Brand1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, -1, -1));

        jButton1.setText("Tekrar ID Ara");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 125, 130, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        jButton3.setText("Geri");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 280, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chk_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_IDActionPerformed

    }//GEN-LAST:event_chk_IDActionPerformed

    private void btn_IDaramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IDaramaActionPerformed
        if (txt_ID.getText().matches("\\d+")) {

            try {
                boolean controll = false;
                Connector.connect();
                PreparedStatement p1 = Connector.conn.prepareStatement("select * from products");
                ResultSet resultSet = p1.executeQuery();
                while (resultSet.next()) {
                    if (resultSet.getInt("ID") == Integer.parseInt(txt_ID.getText())) {
                        txt_Name.setText(resultSet.getString("Name"));
                        Name = txt_Name.getText();
                        txt_Stock.setText(new DecimalFormat("##").format(resultSet.getDouble("Stock")));
                        Stock = txt_Stock.getText();
                        txt_Brand.setText(String.valueOf(resultSet.getString("Brand")));
                        Brand = txt_Brand.getText();
                        txt_warnLimit.setText(resultSet.getString("WarnLimit"));
                        WarnLimit = txt_warnLimit.getText();
                        txt_BuyPrice.setText(String.valueOf(resultSet.getDouble("BuyPrice")));
                        BuyPrice = txt_BuyPrice.getText();
                        txt_SellPrice.setText(String.valueOf(resultSet.getDouble("SellPrice")));
                        SellPrice = txt_SellPrice.getText();
                        chkVisibleFalseWithoutId(false);
                        btn_Delete.setEnabled(true);
                        jButton1.setEnabled(true);
                        txt_ID.setEnabled(false);
                        btn_IDarama.setEnabled(false);
                        controll = true;
                    }
                }
                if (controll == false) {
                    JOptionPane.showMessageDialog(null, "Kayıtlı Olmayan Ürün");
                    isSelectedClick();
                    txtReset();
                    txtVisibleFalseWithoutId(true);
                    chkVisibleFalseWithoutId(true);
                    btn_update.setEnabled(false);
                    btn_Delete.setEnabled(false);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            Connector.disconnect();
        } else {
            JOptionPane.showMessageDialog(null, "Hatalı Giriş!", "HATA", 0);
        }
    }//GEN-LAST:event_btn_IDaramaActionPerformed

    private void chk_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_NameActionPerformed
        if (chk_Name.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_Name.setEnabled(true);
        } else {
            if (!chk_Stock.isSelected() && !chk_warnLimit.isSelected() && !chk_BuyPrice.isSelected() && !chk_SellPrice.isSelected() && !chk_Brand1.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }

            txt_Name.setEnabled(false);
        }
    }//GEN-LAST:event_chk_NameActionPerformed

    private void chk_StockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_StockActionPerformed
        if (chk_Stock.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_Stock.setEnabled(true);
        } else {
            if (!chk_Name.isSelected() && !chk_warnLimit.isSelected() && !chk_BuyPrice.isSelected() && !chk_SellPrice.isSelected() && !chk_Brand1.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }

            txt_Stock.setEnabled(false);
        }
    }//GEN-LAST:event_chk_StockActionPerformed

    private void chk_warnLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_warnLimitActionPerformed
        if (chk_warnLimit.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_warnLimit.setEnabled(true);
        } else {
            if (!chk_Stock.isSelected() && !chk_Name.isSelected() && !chk_BuyPrice.isSelected() && !chk_SellPrice.isSelected() && !chk_Brand1.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }

            txt_warnLimit.setEnabled(false);
        }
    }//GEN-LAST:event_chk_warnLimitActionPerformed

    private void chk_BuyPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_BuyPriceActionPerformed
        if (chk_BuyPrice.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_BuyPrice.setEnabled(true);
        } else {
            if (!chk_Stock.isSelected() && !chk_warnLimit.isSelected() && !chk_Name.isSelected() && !chk_SellPrice.isSelected() && !chk_Brand1.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }
            txt_BuyPrice.setEnabled(false);
        }
    }//GEN-LAST:event_chk_BuyPriceActionPerformed

    private void chk_SellPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_SellPriceActionPerformed
        if (chk_SellPrice.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_SellPrice.setEnabled(true);
        } else {
            if (!chk_Stock.isSelected() && !chk_warnLimit.isSelected() && !chk_BuyPrice.isSelected() && !chk_Name.isSelected() && !chk_Brand1.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }

            txt_SellPrice.setEnabled(false);
        }
    }//GEN-LAST:event_chk_SellPriceActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try {

            Date nowDate = new Date();
            DateFormat df = new SimpleDateFormat("dd.MM.yyyy");
            String a = "";
            
            if (!Methods.regexStringControl(txt_Name.getText())) {
                a += "Name, ";
            }
            if (!Methods.regexStringControl(txt_Brand.getText())) {
                a += "Brand, ";
            }
            if (!txt_Stock.getText().matches("\\d+")) {
                a += "Stock, ";

            }
            if (!Methods.regexControl(txt_BuyPrice.getText()) || txt_BuyPrice.getText().contains(" ")) {
                a += "Purchase Price, ";

            }
            if (!Methods.regexControl(txt_SellPrice.getText()) || txt_SellPrice.getText().contains(" ")) {
                a += "Sale Price, ";

            }
            if (!txt_warnLimit.getText().matches("\\d+")) {
                a += "Warning Limit, ";
            }
            if ((!txt_Stock.getText().matches("\\d+")) || (!Methods.regexControl(txt_BuyPrice.getText())) || (!Methods.regexControl(txt_SellPrice.getText())) || (!txt_warnLimit.getText().matches("\\d+")) || (txt_SellPrice.getText().contains(" ")) || txt_BuyPrice.getText().contains(" ") || (!Methods.regexStringControl(txt_Name.getText())) || (!Methods.regexStringControl(txt_Brand.getText()))) {
                JOptionPane.showMessageDialog(null, a + "Hatalı Giriş!", "HATA", 0);
            } else {
                Connector.connect();
                Product product = new Product(Integer.parseInt(txt_ID.getText()), txt_Name.getText(), txt_Brand.getText(), Double.parseDouble(txt_BuyPrice.getText()), Double.parseDouble(txt_SellPrice.getText()), Double.parseDouble(txt_Stock.getText()), Integer.parseInt(txt_warnLimit.getText()));
                String query = "update products set ID='" + product.getID() + "' ,Name='" + product.getName() + "' ,Brand='" + product.getBrand() + "' ,BuyPrice='" + product.getBuyPrice() + "' ,SellPrice='" + product.getSellPrice() + "' ,Stock='" + product.getStock() + "' ,WarnLimit='" + product.getWarnLimit() + "' where ID='" + product.getID() + "' ";
                PreparedStatement ps = Connector.conn.prepareStatement(query);
                ps.execute();
                DefaultTableModel productmodel = (DefaultTableModel) ProductTable.getModel();
                productmodel.setRowCount(rowCount++);
                productmodel.addRow(new Object[]{
                    product.getID(), product.getName(), product.getBrand(),
                    product.getBuyPrice(), product.getSellPrice(), new DecimalFormat("##").format(product.getStock()), df.format(nowDate)
                });

                productmodel.fireTableDataChanged();
                JOptionPane.showMessageDialog(null, "GÜNCELLENDİ");
                txtReset();
                txt_ID.setEnabled(true);
                btn_IDarama.setEnabled(true);
                jButton1.setEnabled(false);
                isSelectedClick();
                txtVisibleFalseWithoutId(true);
                chkVisibleFalseWithoutId(true);
                btn_update.setEnabled(false);
                btn_Delete.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        Connector.disconnect();
    }//GEN-LAST:event_btn_updateActionPerformed
    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        try {
            Connector.connect();
            PreparedStatement ps = Connector.conn.prepareStatement("select * from products");
            ResultSet resultSet = ps.executeQuery();
            boolean controll = false;
            while (resultSet.next()) {
                if (resultSet.getInt("ID") == Integer.parseInt(txt_ID.getText())) {
                    controll = true;
                    int confirm = JOptionPane.showConfirmDialog(null, txt_ID.getText() + " Bu ID deki Ürünü Silmek İstediğinize Emin Misiniz ?", "Onayla ", 0);
                    if (confirm == 0) {
                        String query = "DELETE FROM products WHERE ID ='" + Integer.parseInt(txt_ID.getText()) + "' ";
                        ps = Connector.conn.prepareStatement(query);
                        ps.execute();
                        JOptionPane.showMessageDialog(null, "SİLİNDİ");
                        txtReset();
                        txt_ID.setEnabled(true);
                        btn_IDarama.setEnabled(true);
                        jButton1.setEnabled(false);
                        chkVisibleFalseWithoutId(true);
                        btn_Delete.setEnabled(false);
                        btn_update.setEnabled(false);
                        break;
                    }
                }
            }
            if (!controll) {
                JOptionPane.showMessageDialog(null, "Kayıtlı Olmayan Ürün");
                txtReset();
                chkVisibleFalseWithoutId(true);
                btn_Delete.setEnabled(false);
                btn_update.setEnabled(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connector.disconnect();
    }//GEN-LAST:event_btn_DeleteActionPerformed
    public void txtVisibleFalseWithoutId(boolean temp) {
        txt_Name.setEnabled(!temp);
        txt_Stock.setEnabled(!temp);
        txt_Brand.setEnabled(!temp);
        txt_warnLimit.setEnabled(!temp);
        txt_BuyPrice.setEnabled(!temp);
        txt_SellPrice.setEnabled(!temp);
    }

    public void txtReset() {
        txt_ID.setText("");
        txt_Brand.setText("");
        txt_Name.setText("");
        txt_warnLimit.setText("");
        txt_BuyPrice.setText("");
        txt_Stock.setText("");
        txt_SellPrice.setText("");
    }

    public void chkVisibleFalseWithoutId(boolean temp) {
        chk_Name.setEnabled(!temp);
        chk_Stock.setEnabled(!temp);
        chk_Brand1.setEnabled(!temp);
        chk_warnLimit.setEnabled(!temp);
        chk_BuyPrice.setEnabled(!temp);
        chk_SellPrice.setEnabled(!temp);
    }

    public void isSelectedClick() {
        if (chk_Name.isSelected()) {
            chk_Name.doClick();
        }
        if (chk_Stock.isSelected()) {
            chk_Stock.doClick();
        }
        if (chk_warnLimit.isSelected()) {
            chk_warnLimit.doClick();
        }
        if (chk_BuyPrice.isSelected()) {
            chk_BuyPrice.doClick();
        }
        if (chk_SellPrice.isSelected()) {
            chk_SellPrice.doClick();
        }
        if (chk_Brand1.isSelected()) {
            chk_Brand1.doClick();
        }
    }

    private void chk_Brand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_Brand1ActionPerformed
        if (chk_Brand1.isSelected()) {
            btn_update.setEnabled(true);
            btn_Delete.setEnabled(false);
            txt_Brand.setEnabled(true);
        } else {
            if (!chk_Stock.isSelected() && !chk_warnLimit.isSelected() && !chk_Name.isSelected() && !chk_SellPrice.isSelected() && !chk_BuyPrice.isSelected()) {
                btn_Delete.setEnabled(true);
                btn_update.setEnabled(false);
            }
            txt_Brand.setEnabled(false);
        }
    }//GEN-LAST:event_chk_Brand1ActionPerformed

    private void txt_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IDActionPerformed
    }//GEN-LAST:event_txt_IDActionPerformed

    private void txt_IDİnputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_IDİnputMethodTextChanged
    }//GEN-LAST:event_txt_IDİnputMethodTextChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txt_ID.setEnabled(true);
        btn_IDarama.setEnabled(true);
        jButton1.setEnabled(false);
        txt_Name.setText(Name);
        txt_Brand.setText(Brand);
        txt_Stock.setText(Stock);
        txt_BuyPrice.setText(BuyPrice);
        txt_SellPrice.setText(SellPrice);
        txt_warnLimit.setText(WarnLimit);
        isSelectedClick();
        chkVisibleFalseWithoutId(true);
        txtVisibleFalseWithoutId(true);
        btn_Delete.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MainView main = new MainView();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MainView main = new MainView();
        main.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ProductTable;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_IDarama;
    private javax.swing.JButton btn_update;
    private javax.swing.JCheckBox chk_Brand1;
    private javax.swing.JCheckBox chk_BuyPrice;
    private javax.swing.JCheckBox chk_ID;
    private javax.swing.JCheckBox chk_Name;
    private javax.swing.JCheckBox chk_SellPrice;
    private javax.swing.JCheckBox chk_Stock;
    private javax.swing.JCheckBox chk_warnLimit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_Brand;
    private javax.swing.JTextField txt_BuyPrice;
    private javax.swing.JTextField txt_ID;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_SellPrice;
    private javax.swing.JTextField txt_Stock;
    private javax.swing.JTextField txt_warnLimit;
    // End of variables declaration//GEN-END:variables
}
